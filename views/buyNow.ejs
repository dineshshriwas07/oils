<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Product Purchase</title>
  
    <!-- favicon  -->
    <link rel="icon" type="image/png" href="/img/favicon-96x96.png" sizes="96x96" />
    <link rel="icon" type="image/svg+xml" href="/img/favicon.svg" />
    <link rel="shortcut icon" href="/img/favicon.ico" />
    <link rel="apple-touch-icon" sizes="180x180" href="/img/apple-touch-icon.png" />
    <meta name="apple-mobile-web-app-title" content="MyWebSite" />
    <link rel="manifest" href="/img/site.webmanifest" />

    <!-- css file link  -->
    <link rel="stylesheet" type="text/css" href="/css/style.css">
    <link rel="stylesheet" type="text/css" href="/css/media.css">

    <!-- bootstrap cdn link  -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- remix icon cdn  -->
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css"
    rel="stylesheet"/>

    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    
    <!-- font family use  -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

</head>
<body>
<div class="container py-5">
  <div class="card shadow-lg p-4">
    <h2 class="text-center mb-4"><i class="bi bi-cart-plus"></i> Purchase Product</h2>

    <form id="purchaseForm ">
    <div class="row">
      <div class="col-lg-6">
           <h2 class="mt-4">Product Info</h2>
          <input type="hidden" id="productId" value="<%= product.id %>">

          <div class="mb-3">
            <label>Product Name</label>
            <input type="text"  id="productTitle" class="form-control" value="<%= product.title %>" readonly>
          </div>

          <div class="mb-3">
            <label>Price (₹)</label>
            <input type="number" class="form-control" id="productPrice" value="<%= product.price %>" readonly>
          </div>

          <div class="mb-3">
            <label>Quantity</label>
            <input type="number" class="form-control" id="productQuantity" value="1" min="1">
          </div>

          <div class="mb-3">
            <label>Total Amount (₹)</label>
            <input type="number" class="form-control" id="totalAmount" value="<%= product.price %>" readonly>
          </div>
      </div>

      <div class="col-md-6">
          <h2 class="mt-4">Customer Info</h2>

          <div class="mb-3">
            <label>Full Name</label>
            <input type="text" class="form-control" id="customerName" value="<%= customer.name %>">
          </div>

          <div class="mb-3">
            <label>Email</label>
            <input type="email" class="form-control" id="customerEmail" value="<%= customer.email %>" readonly>
          </div>

          <div class="mb-3">
            <label>Mobile</label>
            <input type="tel" class="form-control" id="customerMobile" value="<%= customer.phone %>" readonly>
          </div>

          <div class="mb-3">
            <label>Delivery Address</label>
            <textarea class="form-control" id="customerAddress" rows="2"></textarea>
          </div>
      </div>
    </div>

      <button type="button" id="rzpButton" class="btn btn-primary w-100">Complete Purchase</button>
    </form>
  </div>
</div>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  const priceInput = document.getElementById('productPrice');
  const qtyInput = document.getElementById('productQuantity');
  const totalInput = document.getElementById('totalAmount');

  qtyInput.addEventListener('input', () => {
    const total = parseFloat(priceInput.value) * parseInt(qtyInput.value);
    totalInput.value = total;
  });

  document.getElementById('rzpButton').addEventListener('click', async () => {
    const productId = document.getElementById('productId').value;
    const productTitle = document.getElementById('productTitle').value; 
    const productName = document.getElementsByTagName('input').value;
    const price = parseFloat(priceInput.value);
    const quantity = parseInt(qtyInput.value);
    const totalAmount = price * quantity;

    const customerName = document.getElementById('customerName').value;
    const customerEmail = document.getElementById('customerEmail').value;
    const customerMobile = document.getElementById('customerMobile').value;
    const customerAddress = document.getElementById('customerAddress').value;

    try {
      // 1️⃣ Create Razorpay Order
      const orderRes = await fetch('/createOrder', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ totalAmount, productName })
      });

      const orderData = await orderRes.json();
      if(orderData.error) return alert(orderData.error);

      const options = {
        key: '<%= razorpayKeyId %>',
        amount: totalAmount * 100,
        currency: 'INR',
        name: 'Your Shop Name',
        description: productName,
        order_id: orderData.id,
        handler: async function(response){
          // Verify payment & save order
          const verifyRes = await fetch('/verifyPayment', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              id: productId,
              title: productTitle,
              price,
              quantity,
              totalAmount,
              customerName,
              customerEmail,
              customerMobile,
              customerAddress,
              razorpay_order_id: response.razorpay_order_id,
              razorpay_payment_id: response.razorpay_payment_id,
              razorpay_signature: response.razorpay_signature
            })
          });

          const verifyData = await verifyRes.json();
          if(verifyData.success){
            alert(verifyData.message);
            window.location.href = '/';
          } else {
            alert(verifyData.error);
          }
        },
        prefill: {
          name: customerName,
          email: customerEmail,
          contact: customerMobile
        },
        theme: { color: "#4e54c8" }
      };

      const rzp = new Razorpay(options);

      rzp.on('payment.failed', function(response){
        alert("Payment failed or cancelled!");
      });

      rzp.open();
    } catch(err){
      console.error(err);
      alert("Something went wrong!");
    }
  });
</script>
</body>
</html>
